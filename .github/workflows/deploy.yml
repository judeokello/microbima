name: Deploy to Fly.io

on:
  push:
    branches:
      - staging
      - master
  pull_request:
    branches:
      - staging
      - master

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }} 

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    env:
      DEPLOY_INTERNAL_API: true
      AUTO_DEPLOY_DB: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Install Fly.io CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      - name: Deploy Internal API to Staging
        if: env.DEPLOY_INTERNAL_API != 'false'
        run: |
          # Retry deployment up to 3 times on failure
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a microbima-staging-internal-api -c infra/fly/internal-api/staging/fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done

      - name: Run Database Migrations on Staging
        if: env.DEPLOY_INTERNAL_API != 'false' && env.AUTO_DEPLOY_DB == 'true'
        run: |
          echo "üîÑ Running database migrations on staging..."
          flyctl ssh console -a microbima-staging-internal-api -C "sh -c 'cd /app/apps/api && npx prisma migrate deploy'"
          echo "‚úÖ Database migrations completed"

      - name: Deploy Agent Registration to Staging
        run: |
          # Retry deployment up to 3 times on failure
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a maishapoa-staging-agent-registration -c infra/fly/agent-registration/staging/fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done

      # TODO: Enable when web-admin app is created
      # - name: Deploy Web Admin to Staging
      #   run: |
      #     flyctl deploy -a microbima-staging-web-admin -c infra/fly/web-admin/staging/fly.toml

      - name: Deploy Public API to Staging
        run: |
          # Retry deployment up to 3 times on failure
          cd infra/fly/public-api/staging
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a microbima-staging-public-api -c fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done
          cd -

  deploy-production:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://maishapoa-production-internal-api.fly.dev
    env:
      AUTO_DEPLOY_DB: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Install Fly.io CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      - name: Deploy Internal API to Production
        run: |
          # Retry deployment up to 3 times on failure
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a maishapoa-production-internal-api -c infra/fly/internal-api/production/fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done

      - name: Run Database Migrations on Production
        if: env.AUTO_DEPLOY_DB == 'true'
        run: |
          echo "üîÑ Running database migrations on production..."
          flyctl ssh console -a maishapoa-production-internal-api -C "sh -c 'cd /app/apps/api && npx prisma migrate deploy'"
          echo "‚úÖ Database migrations completed"

      - name: Deploy Agent Registration to Production
        run: |
          # Retry deployment up to 3 times on failure
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a maishapoa-production-agent-registration -c infra/fly/agent-registration/production/fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done

      - name: Deploy Public API to Production
        run: |
          # Retry deployment up to 3 times on failure
          cd infra/fly/public-api/production
          for i in {1..3}; do
            echo "Deployment attempt $i..."
            if flyctl deploy -a maishapoa-production-public-api -c fly.toml; then
              echo "‚úÖ Deployment successful"
              break
            else
              if [ $i -lt 3 ]; then
                echo "‚ö†Ô∏è Deployment failed, retrying in 30 seconds..."
                sleep 30
              else
                echo "‚ùå Deployment failed after 3 attempts"
                exit 1
              fi
            fi
          done
          cd -

      # TODO: Enable when web-admin app is created
      # - name: Deploy Web Admin to Production
      #   run: |
      #     flyctl deploy -a maishapoa-production-web-admin -c infra/fly/web-admin/production/fly.toml

  health-check:
    needs: [deploy-staging, deploy-production]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Health Check Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "üè• Running health checks for Staging environment..."
          
          # Agent Registration App
          echo "Checking Agent Registration..."
          curl -f https://maishapoa-staging-agent-registration.fly.dev/ || exit 1
          echo "‚úÖ Agent Registration is healthy"
          
          # Internal API (conditional check)
          if [ "$DEPLOY_INTERNAL_API" != "false" ]; then
            echo "Checking Internal API..."
            curl -f https://microbima-staging-internal-api.fly.dev/api/health || echo "‚ö†Ô∏è Internal API health check failed"
          else
            echo "‚è≠Ô∏è Skipping Internal API health check (not deployed)"
          fi
          
          # Public API (Kong Gateway)
          echo "Checking Public API..."
          curl -f https://microbima-staging-public-api.fly.dev/ || exit 1
          echo "‚úÖ Public API is healthy"
          
          # TODO: Add health check when web-admin app is deployed
          # curl -f https://microbima-staging-web-admin.fly.dev/ || exit 1
          
          echo "‚úÖ Staging health checks completed"

      - name: Health Check Production
        if: github.ref == 'refs/heads/master'
        run: |
          echo "üè• Running health checks for Production environment..."
          
          # Internal API
          echo "Checking Internal API..."
          curl -f https://maishapoa-production-internal-api.fly.dev/api/health || exit 1
          echo "‚úÖ Internal API is healthy"
          
          # Agent Registration App
          echo "Checking Agent Registration..."
          curl -f https://maishapoa-production-agent-registration.fly.dev/ || exit 1
          echo "‚úÖ Agent Registration is healthy"
          
          # Public API (Kong Gateway)
          echo "Checking Public API..."
          curl -f https://maishapoa-production-public-api.fly.dev/ || exit 1
          echo "‚úÖ Public API is healthy"
          
          # TODO: Add health check when web-admin app is deployed
          # curl -f https://maishapoa-production-web-admin.fly.dev/ || exit 1
          
          echo "‚úÖ All production health checks passed successfully"
