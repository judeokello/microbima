/**
 * Error Codes Enum
 * 
 * Comprehensive list of error codes for consistent error handling across the API.
 * These codes enable programmatic error handling and provide clear error categorization.
 */
export enum ErrorCodes {
  // Validation Errors (422)
  VALIDATION_ERROR = 'VALIDATION_ERROR',
  DUPLICATE_EMAIL = 'DUPLICATE_EMAIL',
  DUPLICATE_ID_NUMBER = 'DUPLICATE_ID_NUMBER',
  INVALID_FORMAT = 'INVALID_FORMAT',
  REQUIRED_FIELD_MISSING = 'REQUIRED_FIELD_MISSING',
  FIELD_TOO_LONG = 'FIELD_TOO_LONG',
  FIELD_TOO_SHORT = 'FIELD_TOO_SHORT',
  INVALID_DATE = 'INVALID_DATE',
  FUTURE_DATE_NOT_ALLOWED = 'FUTURE_DATE_NOT_ALLOWED',
  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',
  INVALID_EMAIL_FORMAT = 'INVALID_EMAIL_FORMAT',

  // Conflict Errors (409)
  RESOURCE_CONFLICT = 'RESOURCE_CONFLICT',
  POLICY_ALREADY_ACTIVE = 'POLICY_ALREADY_ACTIVE',
  CUSTOMER_ALREADY_EXISTS = 'CUSTOMER_ALREADY_EXISTS',

  // Client Errors (400)
  MALFORMED_REQUEST = 'MALFORMED_REQUEST',
  INVALID_JSON = 'INVALID_JSON',
  INVALID_QUERY_PARAMETERS = 'INVALID_QUERY_PARAMETERS',
  MISSING_REQUIRED_HEADERS = 'MISSING_REQUIRED_HEADERS',

  // Authentication Errors (401)
  AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR',
  INVALID_API_KEY = 'INVALID_API_KEY',
  API_KEY_EXPIRED = 'API_KEY_EXPIRED',
  MISSING_API_KEY = 'MISSING_API_KEY',

  // Authorization Errors (403)
  AUTHORIZATION_ERROR = 'AUTHORIZATION_ERROR',
  INSUFFICIENT_PERMISSIONS = 'INSUFFICIENT_PERMISSIONS',
  PARTNER_ACCESS_DENIED = 'PARTNER_ACCESS_DENIED',

  // Not Found Errors (404)
  NOT_FOUND = 'NOT_FOUND',
  CUSTOMER_NOT_FOUND = 'CUSTOMER_NOT_FOUND',
  PARTNER_NOT_FOUND = 'PARTNER_NOT_FOUND',
  POLICY_NOT_FOUND = 'POLICY_NOT_FOUND',
  ENDPOINT_NOT_FOUND = 'ENDPOINT_NOT_FOUND',

  // Rate Limiting (429)
  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',

  // Server Errors (500)
  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
  DATABASE_ERROR = 'DATABASE_ERROR',
  EXTERNAL_SERVICE_ERROR = 'EXTERNAL_SERVICE_ERROR',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
  TIMEOUT_ERROR = 'TIMEOUT_ERROR',
  CONFIGURATION_ERROR = 'CONFIGURATION_ERROR'
}

/**
 * Error Code to HTTP Status Mapping
 * 
 * Maps error codes to their appropriate HTTP status codes
 */
export const ERROR_CODE_STATUS_MAP: Record<ErrorCodes, number> = {
  // Validation Errors
  [ErrorCodes.VALIDATION_ERROR]: 422,
  [ErrorCodes.DUPLICATE_EMAIL]: 422,
  [ErrorCodes.DUPLICATE_ID_NUMBER]: 422,
  [ErrorCodes.INVALID_FORMAT]: 422,
  [ErrorCodes.REQUIRED_FIELD_MISSING]: 422,
  [ErrorCodes.FIELD_TOO_LONG]: 422,
  [ErrorCodes.FIELD_TOO_SHORT]: 422,
  [ErrorCodes.INVALID_DATE]: 422,
  [ErrorCodes.FUTURE_DATE_NOT_ALLOWED]: 422,
  [ErrorCodes.INVALID_PHONE_NUMBER]: 422,
  [ErrorCodes.INVALID_EMAIL_FORMAT]: 422,

  // Conflict Errors
  [ErrorCodes.RESOURCE_CONFLICT]: 409,
  [ErrorCodes.POLICY_ALREADY_ACTIVE]: 409,
  [ErrorCodes.CUSTOMER_ALREADY_EXISTS]: 409,

  // Client Errors
  [ErrorCodes.MALFORMED_REQUEST]: 400,
  [ErrorCodes.INVALID_JSON]: 400,
  [ErrorCodes.INVALID_QUERY_PARAMETERS]: 400,
  [ErrorCodes.MISSING_REQUIRED_HEADERS]: 400,

  // Authentication Errors
  [ErrorCodes.AUTHENTICATION_ERROR]: 401,
  [ErrorCodes.INVALID_API_KEY]: 401,
  [ErrorCodes.API_KEY_EXPIRED]: 401,
  [ErrorCodes.MISSING_API_KEY]: 401,

  // Authorization Errors
  [ErrorCodes.AUTHORIZATION_ERROR]: 403,
  [ErrorCodes.INSUFFICIENT_PERMISSIONS]: 403,
  [ErrorCodes.PARTNER_ACCESS_DENIED]: 403,

  // Not Found Errors
  [ErrorCodes.NOT_FOUND]: 404,
  [ErrorCodes.CUSTOMER_NOT_FOUND]: 404,
  [ErrorCodes.PARTNER_NOT_FOUND]: 404,
  [ErrorCodes.POLICY_NOT_FOUND]: 404,
  [ErrorCodes.ENDPOINT_NOT_FOUND]: 404,

  // Rate Limiting
  [ErrorCodes.RATE_LIMIT_EXCEEDED]: 429,
  [ErrorCodes.TOO_MANY_REQUESTS]: 429,

  // Server Errors
  [ErrorCodes.INTERNAL_SERVER_ERROR]: 500,
  [ErrorCodes.DATABASE_ERROR]: 500,
  [ErrorCodes.EXTERNAL_SERVICE_ERROR]: 500,
  [ErrorCodes.SERVICE_UNAVAILABLE]: 500,
  [ErrorCodes.TIMEOUT_ERROR]: 500,
  [ErrorCodes.CONFIGURATION_ERROR]: 500
};
